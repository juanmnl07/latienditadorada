<?php

/**
 * @file
 * Integrates BNCR.com's redirected payment service.
 */

/**
 * Implements hook_menu().
 */
function uc_bncr_menu() {
    $items = array();

    $items['cart/uc_bncr/complete'] = array(
        'title' => 'Order complete',
        'page callback' => 'uc_bncr_complete',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
        'file' => 'uc_bncr.pages.inc',
    );

    return $items;
}

/**
 * Implements hook_init().
 */
function uc_bncr_init() {
    global $conf;
    $conf['i18n_variables'][] = 'uc_bncr_method_title';
    $conf['i18n_variables'][] = 'uc_bncr_checkout_button';
}

/**
 * Implements hook_ucga_display().
 */
function uc_bncr_ucga_display() {
    // Tell UC Google Analytics to display the e-commerce JS on the custom
    // order completion page for this module.
    if (arg(0) == 'cart' && arg(1) == 'uc_bncr' && arg(2) == 'complete') {
        return TRUE;
    }
}

/**
 * Implements hook_uc_payment_method().
 *
 * @see uc_payment_method_uc_bncr()
 */
function uc_bncr_uc_payment_method() {
    $path = base_path() . drupal_get_path('module', 'uc_bncr');
    $title = variable_get('uc_bncr_method_title', t('Pay using BNCR:'));
    $title .= '<br />' . theme('image', array(
                'path' => drupal_get_path('module', 'uc_bncr') . '/2co_logo.jpg',
                'attributes' => array('class' => array('uc-uc_bncr-logo')),
            ));

    $methods['uc_bncr'] = array(
        'name' => t('BNCR'),
        'title' => $title,
        'review' => variable_get('uc_bncr_check', FALSE) ? t('Credit card/eCheck') : t('Credit card'),
        'desc' => t('Redirect to BNCR to pay by credit card.'),
        'callback' => 'uc_payment_method_uc_bncr',
        'redirect' => 'uc_bncr_form',
        'weight' => 3,
        'checkout' => TRUE,
        'no_gateway' => TRUE,
    );

    return $methods;
}

/**
 * Adds BNCR settings to the payment method settings form.
 *
 * @see uc_bncr_uc_payment_method()
 */
function uc_payment_method_uc_bncr($op, &$order, $form = NULL, &$form_state = NULL) {
    switch ($op) {
        case 'cart-details':
            $build = array();

            if (variable_get('uc_bncr_check', FALSE)) {
                $build['pay_method'] = array(
                    '#type' => 'select',
                    '#title' => t('Select your payment type:'),
                    '#default_value' => $_SESSION['pay_method'] == 'CK' ? 'CK' : 'CC',
                    '#options' => array(
                        'CC' => t('Credit card'),
                        'CK' => t('Online check'),
                    ),
                );
                unset($_SESSION['pay_method']);
            }

            return $build;

        case 'cart-process':
            if (isset($form_state['values']['panes']['payment']['details']['pay_method'])) {
                $_SESSION['pay_method'] = $form_state['values']['panes']['payment']['details']['pay_method'];
            }
            return;

        case 'settings':
            $form['uc_bncr_sid'] = array(
                '#type' => 'textfield',
                '#title' => t('Vendor account number'),
                '#description' => t('Your OrbePayment vendor account number.'),
                '#default_value' => variable_get('uc_bncr_sid', ''),
                '#size' => 16,
            );
            $form['uc_bncr_secret_word'] = array(
                '#type' => 'textfield',
                '#title' => t('Secret word for order verification'),
                '#description' => t('The secret word entered in your OrbePayment account Look and Feel settings.'),
                '#default_value' => variable_get('uc_bncr_secret_word', ''),
                '#size' => 16,
            );
            $form['uc_bncr_url'] = array(
                '#type' => 'textfield',
                '#title' => t('URL link for order verification'),
                '#description' => t('The URL link generated in your OrbePayment account.'),
                '#default_value' => variable_get('uc_bncr_url', ''),
                '#size' => 16,
            );
            $form['uc_bncr_demo'] = array(
                '#type' => 'checkbox',
                '#title' => t('Enable demo mode, allowing you to process fake orders for testing purposes.'),
                '#default_value' => variable_get('uc_bncr_demo', TRUE),
            );
            $form['uc_bncr_method_title'] = array(
                '#type' => 'textfield',
                '#title' => t('Payment method title'),
                '#default_value' => variable_get('uc_bncr_method_title', t('Pay using BNCR:')),
            );
            $form['uc_bncr_checkout_button'] = array(
                '#type' => 'textfield',
                '#title' => t('Order review submit button text'),
                '#description' => t('Provide BNCR specific text for the submit button on the order review page.'),
                '#default_value' => variable_get('uc_bncr_checkout_button', t('Submit Order')),
            );
            return $form;
    }
}

/**
 * Form to build the submission to BNCR.com.
 */
function uc_bncr_form($form, &$form_state, $order) {
    $country = uc_get_country_data(array('country_id' => $order->billing_country));
    if ($country === FALSE) {
        $country = array(0 => array('country_iso_code_3' => 'USA'));
    }

    $data = array(
        'sid' => variable_get('uc_bncr_sid', ''),
        'total' => uc_currency_format($order->order_total, FALSE, FALSE, '.'),
        'cart_order_id' => $order->order_id,
        'demo' => variable_get('uc_bncr_demo', TRUE) ? 'Y' : 'N',
        'fixed' => 'Y',
        'lang' => variable_get('uc_bncr_language', 'en'),
        'x_receipt_link_url' => url('cart/uc_bncr/complete/' . uc_cart_get_id(), array('absolute' => TRUE)),
        'merchant_order_id' => $order->order_id,
        'pay_method' => isset($_SESSION['pay_method']) ? $_SESSION['pay_method'] : 'CC',
        'card_holder_name' => drupal_substr($order->billing_first_name . ' ' . $order->billing_last_name, 0, 128),
        'street_address' => drupal_substr($order->billing_street1, 0, 64),
        'street_address2' => drupal_substr($order->billing_street2, 0, 64),
        'city' => drupal_substr($order->billing_city, 0, 64),
        'state' => uc_get_zone_code($order->billing_zone),
        'zip' => drupal_substr($order->billing_postal_code, 0, 16),
        'country' => $country[0]['country_iso_code_3'],
        'email' => drupal_substr($order->primary_email, 0, 64),
        'phone' => drupal_substr($order->billing_phone, 0, 16),
        'id_type' => 1,
    );

    $i = 0;
    foreach ($order->products as $product) {
        $i++;
        $data['c_prod_' . $i] = $product->model . ',' . $product->qty;
        $data['c_name_' . $i] = $product->title;
        $data['c_description_' . $i] = '';
        $data['c_price_' . $i] = uc_currency_format($product->price, FALSE, FALSE, '.');
    }

    $form['#action'] = variable_get('uc_bncr_url', '');

    foreach ($data as $name => $value) {
        $form[$name] = array('#type' => 'hidden', '#value' => $value);
    }

    $form['actions'] = array('#type' => 'actions');
    $form['actions']['submit'] = array(
        '#type' => 'submit',
        '#value' => variable_get('uc_bncr_checkout_button', t('Submit Order')),
    );

    return $form;
}